version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencryptresolver.acme.email=citatech@proton.me"
      - "--certificatesresolvers.letsencryptresolver.acme.storage=/etc/traefik/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./traefik/acme.json:/etc/traefik/acme.json
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      # frontend
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.frontend.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$0s0j0dWJ$$Q1Z9Ul9tqExfjFSf5RgMR0"
      # ACME challenge
      - "traefik.http.routers.acme.rule=PathPrefix(`/.well-known/acme-challenge/`)"
      - "traefik.http.routers.acme.entrypoints=web"
      - "traefik.http.routers.acme.service=api@internal"
      - "traefik.http.routers.acme.tls=false"
    
    networks:
      - web

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`demo-domain.online`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.frontend.priority=1" 
    depends_on:
      - auth-api
      - todos-api
    networks:
      - web

  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`demo-domain.online`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth.entrypoints=websecure"
      - "traefik.http.routers.auth.tls.certresolver=letsencryptresolver"
      - "traefik.http.services.auth.loadbalancer.server.port=8080"  
    depends_on:
      - users-api
    networks:
      - web

  todos-api:
    build:
      context: ./todos-api
      dockerfile: Dockerfile
    labels:
      - traefik.enable=true
      # HTTP Service
      - traefik.http.services.todos.loadbalancer.server.port=8082
      # HTTP Router ()
      - traefik.http.routers.todos-http.rule=(Host(`demo-domain.online`) && PathPrefix(`/api/todos`))
      - traefik.http.routers.todos-http.entrypoints=web
      # HTTP to HTTPS redirect
      - traefik.http.routers.todos-http.middlewares=https-redirect
      - traefik.http.middlewares.https-redirect.redirectScheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectScheme.permanent=true
      # HTTPS Router
      - traefik.http.routers.todos.rule=(Host(`demo-domain.online`) && PathPrefix(`/api/todos`))
      - traefik.http.routers.todos.entrypoints=websecure
      - traefik.http.routers.todos.tls.certresolver=letsencryptresolver
      - traefik.http.services.users-api.loadbalancer.server.port=8083
      - traefik.http.routers.todos.service=todos
    depends_on:
      - redis
    networks:
      - web

  users-api:
    build:
      context: ./users-api
      dockerfile: Dockerfile
    labels:
      - traefik.enable=true
      # HTTP Service
      - traefik.http.services.users.loadbalancer.server.port=8083
      # HTTP Router 
      - traefik.http.routers.users-http.rule=(Host(`demo-domain.online`) && PathPrefix(`/api/users`))
      - traefik.http.routers.users-http.entrypoints=web
      - traefik.http.routers.users-http.service=users-api
      # HTTP to HTTPS redirect
      - traefik.http.routers.users-http.middlewares=https-redirect
      - traefik.http.middlewares.https-redirect.redirectScheme.scheme=https
      - traefik.http.middlewares.https-redirect.redirectScheme.permanent=true
      # HTTPS Router
      - traefik.http.routers.users-https.rule=(Host(`demo-domain.online`) && PathPrefix(`/api/users`))
      - traefik.http.routers.users-https.entrypoints=websecure
      - traefik.http.routers.users-https.tls.certresolver=letsencryptresolver
      - traefik.http.routers.users-https.service=users
    networks:
      - web

  log-message-processor:
    build:
      context: ./log-message-processor
      dockerfile: Dockerfile
    depends_on:
      - redis
    networks:
      - web

  redis:
    image: redis:alpine
    networks:
      - web

networks:
  web:
    external: true
